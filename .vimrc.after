if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

syntax on
filetype plugin indent on
filetype plugin on

set clipboard=unnamed
set cursorline
set tags+=gems.tags
set spell

set background=light
colorscheme solarized

cmap w!! %!sudo tee > /dev/null %

noremap <Leader>f :NERDTreeFind<CR>
noremap <Leader>a :Ack<space>
vnoremap <Leader>a y:Ack <C-r>=fnameescape(@")<CR><CR>

nnoremap <leader>" viw<esc>a"<esc>hbi"<esc>lel
nnoremap <leader>' viw<esc>a'<esc>hbi'<esc>lel

nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

let VimuxUseNearestPane = 1
nnoremap <Leader>vp :VimuxPromptCommand<CR>
nnoremap <Leader>vl :VimuxRunLastCommand<CR>
nnoremap <Leader>vi :VimuxInspectRunner<CR>
nnoremap <Leader>vq :VimuxCloseRunner<CR>
nnoremap <Leader>vk :VimuxInterruptRunner<CR>
nnoremap <Leader>vc :VimuxClearRunnerHistory<CR>
vnoremap <LocalLeader>vs "vy :call VimuxRunCommand(@v . "\n", 0)<CR>
nnoremap <LocalLeader>vs vip<LocalLeader>vs<CR>

nnoremap <Leader>rf :RunRubyFocusedTest<CR>
nnoremap <Leader>rc :RunRubyFocusedContext<CR>
nnoremap <Leader>ra :RunAllRubyTests<CR>
nnoremap <Leader>rg :ZeusConsole<CR>
nnoremap <Leader>rr :ZeusRake<CR>

nnoremap <Leader>gf :GoFmt<CR> :w<CR>
nnoremap <Leader>ga :wa<CR> :call VimuxRunCommand("clear; go fmt ./...")<CR>
"nnoremap <Leader>gt :wa<CR> :call VimuxRunCommand("clear; [ -f script/test ] && script/test \|\| go test ./...")<CR>
nnoremap <Leader>gt :wa<CR> :call VimuxRunCommand("clear; go test ./...")<CR>
nnoremap <Leader>gb :wa<CR> :call VimuxRunCommand("clear; [ -f script/build ] && script/build \|\| go build")<CR>
nnoremap <Leader>gb :wa<CR> :call VimuxRunCommand("clear; [ -f script/build ] && script/build \|\| godep go build \|\| go build")<CR>
nnoremap <leader>gr :call VimuxSendKeys("C-c") <CR> :call VimuxRunCommand("clear; find . -name '*.go' -not -name '*_test.go' \| xargs go run") <CR>

autocmd CursorMovedI * if pumvisible() == 0|silent! pclose|endif
autocmd InsertLeave * if pumvisible() == 0|silent! pclose|endif

let g:go_fmt_command = "goimports"
let g:slime_target = "tmux"
let g:tagbar_ctags_bin = substitute(system("echo $(brew --prefix)/bin/ctags"), '[\]\|[[:cntrl:]]', '', 'g')
let g:jsx_ext_required = 0
let g:rustfmt_autosave = 1
